ggsave("../figures/local_projections/patents_lp_Int_altResid.pdf", patents_lp_omega, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int_altResid_alt.pdf", patents_lp_omega_alt, width = 16, height = 9)
#######################
# Regression
#######################
load("../data/cleaned/BEA_ILPA_data.RData") # pre-cleaned in cleaning code
columns_to_abs <- c(
"delta_software_1", "delta_software_5", "delta_software_10",
"delta_it_1", "delta_it_5", "delta_it_10",
"delta_compq_1", "delta_compq_5", "delta_compq_10"
)
invisible(lapply(columns_to_abs, function(col) {
BEA_ILPA_data[[paste0("abs_", col)]] <<- abs(BEA_ILPA_data[[col]])
}))
# Subset to only include when all delta_As aren't missing (so 2007 on)
BEA_ILPA_data$year <- as.character(BEA_ILPA_data$year)
regression_data <- resid_results_alt %>%
select(Code, year, delta_1, delta_1_resid, delta_logPratio_1_II)
# generate absolute values
regression_data$abs_delta_1 <- abs(regression_data$delta_1)
regression_data$abs_delta_1_resid <- abs(regression_data$delta_1_resid)
regression_data$abs_delta_logPratio_1 <- abs(regression_data$delta_logPratio_1)
# recover maximum by Code-year for abs_delta_1, abs_delta_1_resid, etc...
regression_data_sum <- regression_data %>%
group_by(Code, year) %>%
summarise(
sum_delta_1 = sum(abs_delta_1, na.rm = TRUE),
sum_delta_1_resid = sum(abs_delta_1_resid, na.rm = TRUE)
)
regression_data_sum <- merge(regression_data_sum, BEA_ILPA_data, by = c("Code", "year"))
# Define formulas for regression
formulas <- list(
sum_delta_1 ~ abs_delta_software_1,
sum_delta_1_resid ~ abs_delta_software_1,
sum_delta_1 ~ abs_delta_it_1,
sum_delta_1_resid ~ abs_delta_it_1,
sum_delta_1 ~ abs_delta_compq_1,
sum_delta_1_resid ~ abs_delta_compq_1
)
formula_names <- c(
"sum_1_software_abs",
"sum_resid_1_software_abs",
"sum_1_it_abs",
"sum_resid_1_it_abs",
"sum_1_compq_abs",
"sum_resid_1_compq_abs"
)
results <- lapply(formulas, reg_wrapper, data = regression_data_sum)
names(results) <- formula_names
#######################
# Slides regression
#######################
coef_map <- list(
"abs_delta_software_1" = "Correlation",
"abs_delta_it_1" = "Correlation",
"abs_delta_compq_1" = "Correlation",
"abs_delta_software_5" = "Correlation",
"abs_delta_it_5" = "Correlation",
"abs_delta_compq_5" = "Correlation",
"abs_delta_software_10" = "Correlation",
"abs_delta_it_10" = "Correlation",
"abs_delta_compq_10" = "Correlation")
#######################
# OG regressions comparison
#######################
texreg(list(results[['sum_resid_1_software_abs']][[1]], results[['sum_resid_1_compq_abs']][[1]], results[['sum_resid_1_it_abs']][[1]]), override.se = list(results[['sum_resid_1_software_abs']][[2]], results[['sum_resid_1_compq_abs']][[2]], results[['sum_resid_1_it_abs']][[2]]), override.pvalues = list(results[['sum_resid_1_software_abs']][[3]], results[['sum_resid_1_compq_abs']][[3]], results[['sum_resid_1_it_abs']][[3]]), custom.coef.map = coef_map, custom.model.names = c("Software", "Computer", "IT"), include.rsquared = FALSE, include.adjrs = FALSE, stars = c(.1, .05, .01), table = FALSE, file = "../tables/og_resid_Int_mainresults_1yr_altResid.tex")
patents_lp_omega
patents_lp_omega_alt
patents_lp_omega
library(lpirfs)
library(plm)
library(dplyr)
library(ggplot2)
source("helper_fncts.R")
# load residuals data
load("../data/cleaned/resid_results_1997_2022.RData")
# load BEA + Patents data
load("../data/cleaned/BEA_ILPA_data.RData")
load("../data/cleaned/patent_data_agg.RData")
load("../data/cleaned/summary_naics_crosswalk.RData")
# we have to use Code_patent, to account for multiple Codes mapping to some NAICS 3-digit
temp <- resid_results[, c("Code", "year", "delta_1", "delta_1_resid")]
temp <- merge(temp, summary_naics_crosswalk, by = "Code")
panel_data <- temp %>%
group_by(Code_patent, year) %>%
summarise(
sum_delta_1 = sum(abs(delta_1), na.rm = TRUE),
sum_delta_1_resid = sum(abs(delta_1_resid), na.rm = TRUE)
)
panel_data <- merge(panel_data, patent_data_agg, by = c("Code_patent", "year"), all.x = TRUE, all.y = FALSE)
panel_data <- panel_data[, c("Code_patent", "year", "sum_delta_1", "sum_delta_1_resid", "patents_xi_real", "patents_num", "patents_cites")]
# local projections
patents_lp_og <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_lp_resid <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_lp_og_alt <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_lp_resid_alt <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
# plot and save
patents_lp_both <- graph_lp_both(patents_lp_og, patents_lp_resid)
patents_lp_both_alt <- graph_lp_both(patents_lp_og_alt, patents_lp_resid_alt)
patents_lp <- graph_lp_one(patents_lp_resid, "resid")
patents_lp_alt <- graph_lp_one(patents_lp_resid_alt, "resid")
ggsave("../figures/local_projections/patents_lp_Int_both.pdf", patents_lp_both, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int_both_alt.pdf", patents_lp_both_alt, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int_alt.pdf", patents_lp_alt, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int.pdf", patents_lp, width = 9, height = 9)
View(panel_data)
source("~/Library/CloudStorage/GoogleDrive-jacob.gosselin@u.northwestern.edu/My Drive/research_ideas/changing_network/code/clean_patents.R")
View(patent_data_agg)
library(lpirfs)
library(plm)
library(dplyr)
library(ggplot2)
source("helper_fncts.R")
# load residuals data
load("../data/cleaned/resid_results_1997_2022.RData")
# load BEA + Patents data
load("../data/cleaned/BEA_ILPA_data.RData")
load("../data/cleaned/patent_data_agg.RData")
load("../data/cleaned/summary_naics_crosswalk.RData")
# we have to use Code_patent, to account for multiple Codes mapping to some NAICS 3-digit
temp <- resid_results[, c("Code", "year", "delta_1", "delta_1_resid")]
temp <- merge(temp, summary_naics_crosswalk, by = "Code")
panel_data <- temp %>%
group_by(Code_patent, year) %>%
summarise(
sum_delta_1 = sum(abs(delta_1), na.rm = TRUE),
sum_delta_1_resid = sum(abs(delta_1_resid), na.rm = TRUE)
)
panel_data <- merge(panel_data, patent_data_agg, by = c("Code_patent", "year"), all.x = TRUE, all.y = FALSE)
panel_data <- panel_data[, c("Code_patent", "year", "sum_delta_1", "sum_delta_1_resid", "patents_xi_real", "patents_num", "patents_cites")]
# local projections
patents_lp_og <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_lp_resid <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_lp_og_alt <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_lp_resid_alt <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_cluster = "group", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
# plot and save
patents_lp_both <- graph_lp_both(patents_lp_og, patents_lp_resid)
patents_lp_both_alt <- graph_lp_both(patents_lp_og_alt, patents_lp_resid_alt)
patents_lp <- graph_lp_one(patents_lp_resid, "resid")
patents_lp_alt <- graph_lp_one(patents_lp_resid_alt, "resid")
ggsave("../figures/local_projections/patents_lp_Int_both.pdf", patents_lp_both, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int_both_alt.pdf", patents_lp_both_alt, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int_alt.pdf", patents_lp_alt, width = 16, height = 9)
ggsave("../figures/local_projections/patents_lp_Int.pdf", patents_lp, width = 9, height = 9)
patents_lp
patents_lp_alt
patents_lp
source("~/Documents(local)/GitHub/HeterogeousSectoralProduction/code/master_run_1997-2023.R")
source("~/Documents(local)/GitHub/HeterogeousSectoralProduction/code/master_run_1947-1996.R")
library(dplyr)
library(tidyr)
source("helper_fncts.R")
# load resid data
load("../data/cleaned/resid_data_1948_1962.RData")
load("../data/cleaned/resid_data_1964_1996.RData")
load("../data/cleaned/resid_data_1998_2023.RData")
# Clean resid data
resid_data_1948_1962_clean <- resid_data_1948_1962 %>%
filter(!is.na(delta_1) & !is.na(delta_logPratio_1_II) & !is.infinite(delta_1))
resid_data_1964_1996_clean <- resid_data_1964_1996 %>%
filter(!is.na(delta_1) & !is.na(delta_logPratio_1_II) &  !is.infinite(delta_1))
resid_data_1998_2023_clean <- resid_data_1998_2023 %>%
filter(!is.na(delta_1) & !is.na(delta_logPratio_1_II) & !is.infinite(delta_1))
# refactor since eliminating observations
resid_data_1948_1962_clean$year <- as.numeric(resid_data_1948_1962_clean$year)
resid_data_1964_1996_clean$year <- as.numeric(resid_data_1964_1996_clean$year)
resid_data_1998_2023_clean$year <- as.numeric(resid_data_1998_2023_clean$year)
resid_data_1948_1962_clean$Code <- as.factor(as.character(resid_data_1948_1962_clean$Code))
resid_data_1964_1996_clean$Code <- as.factor(as.character(resid_data_1964_1996_clean$Code))
resid_data_1998_2023_clean$Code <- as.factor(as.character(resid_data_1998_2023_clean$Code))
resid_data_1948_1962_clean$industry_year <- as.factor(paste0(resid_data_1948_1962_clean$Code, "_", resid_data_1948_1962_clean$year))
resid_data_1964_1996_clean$industry_year <- as.factor(paste0(resid_data_1964_1996_clean$Code, "_", resid_data_1964_1996_clean$year))
resid_data_1998_2023_clean$industry_year <- as.factor(paste0(resid_data_1998_2023_clean$Code, "_", resid_data_1998_2023_clean$year))
library(lmtest)
library(sandwich)
library(texreg)
library(fixest)
source("helper_fncts.R")
# Get absolute value Pratio and delta_1
resid_data_1948_1962_clean$abs_delta_logPratio_1 <- abs(resid_data_1948_1962_clean$delta_logPratio_1_II)
resid_data_1964_1996_clean$abs_delta_logPratio_1 <- abs(resid_data_1964_1996_clean$delta_logPratio_1_II)
resid_data_1998_2023_clean$abs_delta_logPratio_1 <- abs(resid_data_1998_2023_clean$delta_logPratio_1_II)
resid_data_1948_1962_clean$abs_delta_1 <- abs(resid_data_1948_1962_clean$delta_1)
resid_data_1964_1996_clean$abs_delta_1 <- abs(resid_data_1964_1996_clean$delta_1)
resid_data_1998_2023_clean$abs_delta_1 <- abs(resid_data_1998_2023_clean$delta_1)
# abs Delta abs Price correlation, 5-year groups
formula <- abs_delta_1 ~ abs_delta_logPratio_1 | industry_year
price_reg_results_1948_2023 <- lapply(list(resid_data_1948_1962_clean, resid_data_1964_1996_clean, resid_data_1998_2023_clean), function(x) reg_wrapper_feols(x, formula))
names(price_reg_results_1948_2023) <- c("1947_1962", "1963_1996", "1998_2023")
# texreg results
texreg(list(price_reg_results_1948_2023[[1]][[1]], price_reg_results_1948_2023[[2]][[1]], price_reg_results_1948_2023[[3]][[1]]), override.se = list(price_reg_results_1948_2023[[1]][[2]], price_reg_results_1948_2023[[2]][[2]], price_reg_results_1948_2023[[3]][[2]]), override.p = list(price_reg_results_1948_2023[[1]][[3]], price_reg_results_1948_2023[[2]][[3]], price_reg_results_1948_2023[[3]][[3]]), stars = c(0.01, 0.05, 0.1), custom.model.names = c("1947-1962", "1963-1996", "1998-2022"), include.rsquared = FALSE, include.adjrs = FALSE, table = FALSE, file = "../tables/PriceReg_1948-2022.tex")
library(fixest)
# run residualizing regressions
model_1948_1962 <- feols(delta_1 ~ delta_logPj_1:industry_year | industry_year, data = resid_data_1948_1962_clean)
model_1964_1996 <- feols(delta_1 ~ delta_logPj_1:industry_year | industry_year, data = resid_data_1964_1996_clean)
model_1998_2023 <- feols(delta_1 ~ delta_logPj_1:industry_year | industry_year, data = resid_data_1998_2023_clean)
# leaving SEs homoskedastic since they are unused
model_1948_1962_sum <- summary(model_1948_1962)
model_1964_1996_sum <- summary(model_1964_1996)
model_1998_2023_sum <- summary(model_1998_2023)
# store residuals
resid_results_1948_1962 <- resid_data_1948_1962_clean
resid_results_1948_1962$delta_1_resid <- model_1948_1962$residuals
resid_results_1964_1996 <- resid_data_1964_1996_clean
resid_results_1964_1996$delta_1_resid <- model_1964_1996$residuals
resid_results_1998_2023 <- resid_data_1998_2023_clean
resid_results_1998_2023$delta_1_resid <- model_1998_2023$residuals
resid_results_1948_1962 <- resid_results_1948_1962[, c("Code", "j", "year", "delta_1", "delta_1_resid")]
resid_results_1964_1996 <- resid_results_1964_1996[, c("Code", "j", "year", "delta_1", "delta_1_resid")]
resid_results_1998_2023 <- resid_results_1998_2023[, c("Code", "j", "year", "delta_1", "delta_1_resid")]
resid_results_all <- rbind(resid_results_1948_1962, resid_results_1964_1996, resid_results_1998_2023)
save(model_1948_1962_sum, model_1964_1996_sum, model_1998_2023_sum, resid_results_all, file = "../data/cleaned/resid_results_hist.RData")
library(lpirfs)
library(dplyr)
library(ggplot2)
# load residuals data
load("../data/cleaned/resid_results_hist.RData")
source("helper_fncts.R") #helper fncts
# load BEA + Patents data
load("../data/cleaned/patent_data_agg.RData")
# we have to use Code_patent, to account for multiple Codes mapping to some NAICS 3-digit
temp <- resid_results_all[, c("Code", "year", "delta_1", "delta_1_resid")]
panel_data <- temp %>%
group_by(Code, year) %>%
summarise(
sum_delta_1 = sum(abs(delta_1), na.rm = TRUE),
sum_delta_1_resid = sum(abs(delta_1_resid), na.rm = TRUE)
)
panel_data <- merge(panel_data, patent_data_agg, by = c("Code", "year"), all.x = TRUE, all.y = FALSE)
panel_data <- panel_data[, c("Code", "year", "sum_delta_1", "sum_delta_1_resid", "patents_xi_real", "patents_num", "patents_cites")]
# local projections
patents_value_lp_og <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_value_lp_resid <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_citations_lp_og <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_citations_lp_resid <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
# plot and save
patents_value_lp_both <- graph_lp_both(patents_value_lp_og, patents_value_lp_resid)
patents_citations_lp_both <- graph_lp_both(patents_citations_lp_og, patents_citations_lp_resid)
patents_value_lp <- graph_lp_one(patents_value_lp_resid, "resid")
patents_citations_lp <- graph_lp_one(patents_citations_lp_resid, "resid")
# ggsave("../figures/local_projections/patents_value_residual_og&resid_hist.pdf", patents_value_lp_both, width = 9, height = 9)
# ggsave("../figures/local_projections/patents_citations_og&resid_hist.pdf", patents_citations_lp_both, width = 9, height = 9)
ggsave("../figures/local_projections/patents_value_resid_hist.pdf", patents_value_lp, width = 16, height = 9)
ggsave("../figures/local_projections/patents_citations_resid_hist.pdf", patents_citations_lp, width = 16, height = 9)
library(ggplot2)
library(dplyr)
library(fixest)
library(xtable)
# load results
load("../data/cleaned/resid_results_hist.RData")
source("helper_fncts.R")
# extract coefficients for each model
coef_names <- names(coef(model_1948_1962_sum))
alpha_it_1948_1962 <- as.data.frame(model_1948_1962_sum$coefficients[grep("delta_logPj_1:", coef_names, value = TRUE)])
colnames(alpha_it_1948_1962) <- "value"
coef_names <- names(coef(model_1964_1996_sum))
alpha_it_1964_1996 <- as.data.frame(model_1964_1996_sum$coefficients[grep("delta_logPj_1:", coef_names, value = TRUE)])
colnames(alpha_it_1964_1996) <- "value"
coef_names <- names(coef(model_1998_2023_sum))
alpha_it_1998_2023 <- as.data.frame(model_1998_2023_sum$coefficients[grep("delta_logPj_1:", coef_names, value = TRUE)])
colnames(alpha_it_1998_2023) <- "value"
# combine all coefficients
alpha_it <- rbind(alpha_it_1948_1962, alpha_it_1964_1996, alpha_it_1998_2023)
alpha_it$theta <- 1 - alpha_it$value
theta_it <- data.frame("term" = rownames(alpha_it), "theta" = alpha_it$theta)
theta_it <- separate(theta_it, term, into = c("term", "Code"), sep = ":")
theta_it$Code <- gsub("industry_year", "", theta_it$Code)
theta_it <- separate(theta_it, Code, into = c("Code", "year"), sep = "_")
theta_it$year <- as.numeric(theta_it$year) - 1 # corresponds to substitution in t-1 to t, so we shift year by 1
theta_collapsed_Year <- theta_it %>%
group_by(year) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta))
theta_collapsed_Code_1947_1962 <- subset(theta_it, year <= 1962) %>%
group_by(Code) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta, na.rm = TRUE))
theta_collapsed_Code_1964_1996 <- subset(theta_it, year > 1964 & year <= 1996) %>%
group_by(Code) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta))
theta_collapsed_Code_1998_2023 <- subset(theta_it, year > 1997) %>%
group_by(Code) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta))
all_years <- data.frame(year = seq(min(theta_collapsed_Year$year), max(theta_collapsed_Year$year)))
theta_collapsed_Year_complete <- merge(all_years, theta_collapsed_Year, by = "year", all.x = TRUE)
# plot by year
theta_mean_plot_byYear <- ggplot(theta_collapsed_Year_complete, aes(x = year, y = mean_theta)) +
geom_line(color = "black") +  # Add a line for the mean
# geom_ribbon(aes(ymin = mean_theta - sd_theta, ymax = mean_theta + sd_theta), alpha = 0.2, fill = "black") +  # Add shaded region for SD
geom_point() +  # Add points for the mean
theme_minimal() +
theme(text = element_text(family = "serif", size = 24)) +
labs(x = "Year", y = expression(~theta[i]), title = "") +
geom_hline(yintercept = 0, linetype = "dashed") + geom_hline(yintercept = 1, linetype = "dashed") + ylim(-3,3) +
# label every 5-years
scale_x_continuous(breaks = seq(1950, 2020, 10))
# plot by Code
theta_mean_plot_byCode_1947_1962 <- ggplot(theta_collapsed_Code_1947_1962, aes(y = Code, x = mean_theta)) +
geom_errorbarh(aes(xmin = mean_theta - sd_theta, xmax = mean_theta + sd_theta), height = 0.2) +
geom_point() +
theme_minimal() +
theme(axis.text.y = element_blank(), text = element_text(family = "serif", size = 24)) +
labs(x = "1948-1962", y = "", title = "") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 1, linetype = "dashed") + xlim(-3,3)
theta_mean_plot_byCode_1964_1996 <- ggplot(theta_collapsed_Code_1964_1996, aes(y = Code, x = mean_theta)) +
geom_errorbarh(aes(xmin = mean_theta - sd_theta, xmax = mean_theta + sd_theta), height = 0.2) +
geom_point() +
theme_minimal() +
theme(axis.text.y = element_blank(), text = element_text(family = "serif", size = 24)) +
labs(x = "1964-1996", y = "", title = "") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 1, linetype = "dashed") + xlim(-3,3)
theta_mean_plot_byCode_1998_2023 <- ggplot(theta_collapsed_Code_1998_2023, aes(y = Code, x = mean_theta)) +
geom_errorbarh(aes(xmin = mean_theta - sd_theta, xmax = mean_theta + sd_theta), height = 0.2) +
geom_point() +
theme_minimal() +
theme(axis.text.y = element_blank(), text = element_text(family = "serif", size = 24)) +
labs(x = "1998-2023", y = "", title = "") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 1, linetype = "dashed") + xlim(-3,3)
library(ggpubr)
theta_mean_plot_byCode = ggarrange(theta_mean_plot_byCode_1947_1962, theta_mean_plot_byCode_1964_1996, theta_mean_plot_byCode_1998_2023, ncol = 3, nrow = 1)
ggsave("../figures/elasticity_est/elasticity_byCode_hist.pdf", theta_mean_plot_byCode, width = 16, height = 9)
ggsave("../figures/elasticity_est/elasticity_byYear_hist.pdf", theta_mean_plot_byYear, width = 16, height = 9)
library(dplyr)
library(tidyr)
source("helper_fncts.R")
# load resid data
load("../data/cleaned/resid_data_1948_1962.RData")
load("../data/cleaned/resid_data_1964_1996.RData")
load("../data/cleaned/resid_data_1998_2023.RData")
# Clean resid data
resid_data_1948_1962_clean <- resid_data_1948_1962 %>%
filter(!is.na(delta_1) & !is.na(delta_logPratio_1_II) & !is.infinite(delta_1))
resid_data_1964_1996_clean <- resid_data_1964_1996 %>%
filter(!is.na(delta_1) & !is.na(delta_logPratio_1_II) &  !is.infinite(delta_1))
resid_data_1998_2023_clean <- resid_data_1998_2023 %>%
filter(!is.na(delta_1) & !is.na(delta_logPratio_1_II) & !is.infinite(delta_1))
# refactor since eliminating observations
resid_data_1948_1962_clean$year <- as.numeric(resid_data_1948_1962_clean$year)
resid_data_1964_1996_clean$year <- as.numeric(resid_data_1964_1996_clean$year)
resid_data_1998_2023_clean$year <- as.numeric(resid_data_1998_2023_clean$year)
resid_data_1948_1962_clean$Code <- as.factor(as.character(resid_data_1948_1962_clean$Code))
resid_data_1964_1996_clean$Code <- as.factor(as.character(resid_data_1964_1996_clean$Code))
resid_data_1998_2023_clean$Code <- as.factor(as.character(resid_data_1998_2023_clean$Code))
resid_data_1948_1962_clean$industry_year <- as.factor(paste0(resid_data_1948_1962_clean$Code, "_", resid_data_1948_1962_clean$year))
resid_data_1964_1996_clean$industry_year <- as.factor(paste0(resid_data_1964_1996_clean$Code, "_", resid_data_1964_1996_clean$year))
resid_data_1998_2023_clean$industry_year <- as.factor(paste0(resid_data_1998_2023_clean$Code, "_", resid_data_1998_2023_clean$year))
library(fixest)
# run residualizing regressions
model_1948_1962 <- feols(delta_1 ~ delta_logPj_1:industry_year | industry_year, data = resid_data_1948_1962_clean)
model_1964_1996 <- feols(delta_1 ~ delta_logPj_1:industry_year | industry_year, data = resid_data_1964_1996_clean)
model_1998_2023 <- feols(delta_1 ~ delta_logPj_1:industry_year | industry_year, data = resid_data_1998_2023_clean)
# leaving SEs homoskedastic since they are unused
model_1948_1962_sum <- summary(model_1948_1962)
model_1964_1996_sum <- summary(model_1964_1996)
model_1998_2023_sum <- summary(model_1998_2023)
# store residuals
resid_results_1948_1962 <- resid_data_1948_1962_clean
resid_results_1948_1962$delta_1_resid <- model_1948_1962$residuals
resid_results_1964_1996 <- resid_data_1964_1996_clean
resid_results_1964_1996$delta_1_resid <- model_1964_1996$residuals
resid_results_1998_2023 <- resid_data_1998_2023_clean
resid_results_1998_2023$delta_1_resid <- model_1998_2023$residuals
resid_results_1948_1962 <- resid_results_1948_1962[, c("Code", "j", "year", "delta_1", "delta_1_resid")]
resid_results_1964_1996 <- resid_results_1964_1996[, c("Code", "j", "year", "delta_1", "delta_1_resid")]
resid_results_1998_2023 <- resid_results_1998_2023[, c("Code", "j", "year", "delta_1", "delta_1_resid")]
resid_results_all <- rbind(resid_results_1948_1962, resid_results_1964_1996, resid_results_1998_2023)
# save(model_1948_1962_sum, model_1964_1996_sum, model_1998_2023_sum, resid_results_all, file = "../data/cleaned/resid_results_hist.RData") (too big to save on Github)
library(lpirfs)
library(dplyr)
library(ggplot2)
# load residuals data
# load("../data/cleaned/resid_results_hist.RData") (too big to save it on Github)
source("helper_fncts.R") #helper fncts
# load BEA + Patents data
load("../data/cleaned/patent_data_agg.RData")
# we have to use Code_patent, to account for multiple Codes mapping to some NAICS 3-digit
temp <- resid_results_all[, c("Code", "year", "delta_1", "delta_1_resid")]
panel_data <- temp %>%
group_by(Code, year) %>%
summarise(
sum_delta_1 = sum(abs(delta_1), na.rm = TRUE),
sum_delta_1_resid = sum(abs(delta_1_resid), na.rm = TRUE)
)
panel_data <- merge(panel_data, patent_data_agg, by = c("Code", "year"), all.x = TRUE, all.y = FALSE)
panel_data <- panel_data[, c("Code", "year", "sum_delta_1", "sum_delta_1_resid", "patents_xi_real", "patents_num", "patents_cites")]
# local projections
patents_value_lp_og <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_value_lp_resid <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_xi_real", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_citations_lp_og <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
patents_citations_lp_resid <- lp_lin_panel(panel_data, panel_model = "within", panel_effect = "twoways", robust_cov = "vcovHC", robust_method = "white1", diff_shock = FALSE, endog_data = "sum_delta_1_resid", shock = "patents_cites", confint = 1.65, hor = 15, cumul_mult = FALSE)
# plot and save
patents_value_lp_both <- graph_lp_both(patents_value_lp_og, patents_value_lp_resid)
patents_citations_lp_both <- graph_lp_both(patents_citations_lp_og, patents_citations_lp_resid)
patents_value_lp <- graph_lp_one(patents_value_lp_resid, "resid")
patents_citations_lp <- graph_lp_one(patents_citations_lp_resid, "resid")
# ggsave("../figures/local_projections/patents_value_residual_og&resid_hist.pdf", patents_value_lp_both, width = 9, height = 9)
# ggsave("../figures/local_projections/patents_citations_og&resid_hist.pdf", patents_citations_lp_both, width = 9, height = 9)
ggsave("../figures/local_projections/patents_value_resid_hist.pdf", patents_value_lp, width = 16, height = 9)
ggsave("../figures/local_projections/patents_citations_resid_hist.pdf", patents_citations_lp, width = 16, height = 9)
library(ggplot2)
library(dplyr)
library(fixest)
library(xtable)
# load results
# load("../data/cleaned/resid_results_hist.RData") (too big to save on Github)
source("helper_fncts.R")
# extract coefficients for each model
coef_names <- names(coef(model_1948_1962_sum))
alpha_it_1948_1962 <- as.data.frame(model_1948_1962_sum$coefficients[grep("delta_logPj_1:", coef_names, value = TRUE)])
colnames(alpha_it_1948_1962) <- "value"
coef_names <- names(coef(model_1964_1996_sum))
alpha_it_1964_1996 <- as.data.frame(model_1964_1996_sum$coefficients[grep("delta_logPj_1:", coef_names, value = TRUE)])
colnames(alpha_it_1964_1996) <- "value"
coef_names <- names(coef(model_1998_2023_sum))
alpha_it_1998_2023 <- as.data.frame(model_1998_2023_sum$coefficients[grep("delta_logPj_1:", coef_names, value = TRUE)])
colnames(alpha_it_1998_2023) <- "value"
# combine all coefficients
alpha_it <- rbind(alpha_it_1948_1962, alpha_it_1964_1996, alpha_it_1998_2023)
alpha_it$theta <- 1 - alpha_it$value
theta_it <- data.frame("term" = rownames(alpha_it), "theta" = alpha_it$theta)
theta_it <- separate(theta_it, term, into = c("term", "Code"), sep = ":")
theta_it$Code <- gsub("industry_year", "", theta_it$Code)
theta_it <- separate(theta_it, Code, into = c("Code", "year"), sep = "_")
theta_it$year <- as.numeric(theta_it$year) - 1 # corresponds to substitution in t-1 to t, so we shift year by 1
theta_collapsed_Year <- theta_it %>%
group_by(year) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta))
theta_collapsed_Code_1947_1962 <- subset(theta_it, year <= 1962) %>%
group_by(Code) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta, na.rm = TRUE))
theta_collapsed_Code_1964_1996 <- subset(theta_it, year > 1964 & year <= 1996) %>%
group_by(Code) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta))
theta_collapsed_Code_1998_2023 <- subset(theta_it, year > 1997) %>%
group_by(Code) %>%
summarise(mean_theta = mean(theta),
sd_theta = sd(theta))
all_years <- data.frame(year = seq(min(theta_collapsed_Year$year), max(theta_collapsed_Year$year)))
theta_collapsed_Year_complete <- merge(all_years, theta_collapsed_Year, by = "year", all.x = TRUE)
# plot by year
theta_mean_plot_byYear <- ggplot(theta_collapsed_Year_complete, aes(x = year, y = mean_theta)) +
geom_line(color = "black") +  # Add a line for the mean
# geom_ribbon(aes(ymin = mean_theta - sd_theta, ymax = mean_theta + sd_theta), alpha = 0.2, fill = "black") +  # Add shaded region for SD
geom_point() +  # Add points for the mean
theme_minimal() +
theme(text = element_text(family = "serif", size = 24)) +
labs(x = "Year", y = expression(~theta[i]), title = "") +
geom_hline(yintercept = 0, linetype = "dashed") + geom_hline(yintercept = 1, linetype = "dashed") + ylim(-3,3) +
# label every 5-years
scale_x_continuous(breaks = seq(1950, 2020, 10))
# plot by Code
theta_mean_plot_byCode_1947_1962 <- ggplot(theta_collapsed_Code_1947_1962, aes(y = Code, x = mean_theta)) +
geom_errorbarh(aes(xmin = mean_theta - sd_theta, xmax = mean_theta + sd_theta), height = 0.2) +
geom_point() +
theme_minimal() +
theme(axis.text.y = element_blank(), text = element_text(family = "serif", size = 24)) +
labs(x = "1948-1962", y = "", title = "") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 1, linetype = "dashed") + xlim(-3,3)
theta_mean_plot_byCode_1964_1996 <- ggplot(theta_collapsed_Code_1964_1996, aes(y = Code, x = mean_theta)) +
geom_errorbarh(aes(xmin = mean_theta - sd_theta, xmax = mean_theta + sd_theta), height = 0.2) +
geom_point() +
theme_minimal() +
theme(axis.text.y = element_blank(), text = element_text(family = "serif", size = 24)) +
labs(x = "1964-1996", y = "", title = "") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 1, linetype = "dashed") + xlim(-3,3)
theta_mean_plot_byCode_1998_2023 <- ggplot(theta_collapsed_Code_1998_2023, aes(y = Code, x = mean_theta)) +
geom_errorbarh(aes(xmin = mean_theta - sd_theta, xmax = mean_theta + sd_theta), height = 0.2) +
geom_point() +
theme_minimal() +
theme(axis.text.y = element_blank(), text = element_text(family = "serif", size = 24)) +
labs(x = "1998-2023", y = "", title = "") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 1, linetype = "dashed") + xlim(-3,3)
library(ggpubr)
theta_mean_plot_byCode = ggarrange(theta_mean_plot_byCode_1947_1962, theta_mean_plot_byCode_1964_1996, theta_mean_plot_byCode_1998_2023, ncol = 3, nrow = 1)
ggsave("../figures/elasticity_est/elasticity_byCode_hist.pdf", theta_mean_plot_byCode, width = 16, height = 9)
ggsave("../figures/elasticity_est/elasticity_byYear_hist.pdf", theta_mean_plot_byYear, width = 16, height = 9)
# load libraries and data
library(ggplot2)
gdp_simulation <- read.csv("../data/cleaned/structural/simulated_gdp.csv")
plot_dist <- function(data, vars, labs){
dist <- data[, vars]
dist_long <- reshape2::melt(dist, value.name = "val", variable.name = "type")
dist_long$type <- factor(dist_long$type, levels = vars, labels = labs)
# plot the distribution of GDP, color lines by type
plot <- ggplot(dist_long, aes(x = val)) +
stat_density(aes(color = type), geom="line",position="identity", size = .75) +
theme_minimal() +
labs(title = "", x = "", y = "", color = "") +
scale_color_manual(values = c("black", "red", "blue")) +
theme(text = element_text(family = "serif", size = 32), legend.position = "bottom")
return(plot)
}
het_year_annual <- plot_dist(gdp_simulation, c("gdp_dist_CD_annual", "gdp_dist_high_annual", "gdp_dist_low_annual"), c("Cobb-Douglas", "High", "Low"))
het_year_quad <- plot_dist(gdp_simulation, c("gdp_dist_CD_quad", "gdp_dist_high_quad", "gdp_dist_low_quad"), c("Cobb-Douglas", "High", "Low"))
library(ggpubr)
het_year_annual_panel <- het_year_annual + labs(title = "Annual")
het_year_quad_panel <- het_year_quad + labs(title = "Quadrennial")
het_year <- ggarrange(het_year_annual_panel, het_year_quad_panel, ncol = 2, nrow = 1)
# save
ggsave("../figures/theory/gdp_het_year.pdf", het_year, width=16, height=9)
het_year
